import { useCallback, useMemo, useState } from "react";

import { Check, Clock, Play, Plus, Type, Zap } from "lucide-react";
import { useTranslation } from "react-i18next";

import { FavoriteButton } from "@/features/browser/components/layout/favorite-button";
import { useResources } from "@/features/resources";

import { StyleTemplate } from "../types";

interface StyleTemplatePreviewProps {
  template: StyleTemplate;
  size: number;
  onSelect: (templateId: string) => void;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–µ–≤—å—é —Å—Ç–∏–ª–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–∏–Ω–∏–∞—Ç—é—Ä—É, –Ω–∞–∑–≤–∞–Ω–∏–µ, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Ñ—É–Ω–∫—Ü–∏–π
 */
export function StyleTemplatePreview({ template, size, onSelect }: StyleTemplatePreviewProps): React.ReactElement {
  const { t, i18n } = useTranslation();
  const [isHovered, setIsHovered] = useState(false);
  const { addStyleTemplate, isStyleTemplateAdded } = useResources();

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫
  const currentLanguage = (i18n.language || 'ru') as 'ru' | 'en';

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ —à–∞–±–ª–æ–Ω –≤ —Ä–µ—Å—É—Ä—Å—ã
  const isAdded = useMemo(() => isStyleTemplateAdded(template), [isStyleTemplateAdded, template]);

  // –í—ã—á–∏—Å–ª—è–µ–º –≤—ã—Å–æ—Ç—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω
  const height = useMemo(() => {
    const ratio = template.aspectRatio === "9:16" ? 16/9 : template.aspectRatio === "1:1" ? 1 : 9/16;
    return size / ratio;
  }, [template.aspectRatio, size]);

  // –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const getCategoryName = useCallback((category: string) => {
    const categoryMap: Record<string, string> = {
      intro: t("styleTemplates.categories.intro", "–ò–Ω—Ç—Ä–æ"),
      outro: t("styleTemplates.categories.outro", "–ö–æ–Ω—Ü–æ–≤–∫–∞"),
      "lower-third": t("styleTemplates.categories.lowerThird", "–ù–∏–∂–Ω—è—è —Ç—Ä–µ—Ç—å"),
      title: t("styleTemplates.categories.title", "–ó–∞–≥–æ–ª–æ–≤–æ–∫"),
      transition: t("styleTemplates.categories.transition", "–ü–µ—Ä–µ—Ö–æ–¥"),
      overlay: t("styleTemplates.categories.overlay", "–ù–∞–ª–æ–∂–µ–Ω–∏–µ"),
    };
    return categoryMap[category] || category;
  }, [t]);

  // –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∏–ª—è
  const getStyleName = useCallback((style: string) => {
    const styleMap: Record<string, string> = {
      modern: t("styleTemplates.styles.modern", "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π"),
      vintage: t("styleTemplates.styles.vintage", "–í–∏–Ω—Ç–∞–∂"),
      minimal: t("styleTemplates.styles.minimal", "–ú–∏–Ω–∏–º–∞–ª–∏–∑–º"),
      corporate: t("styleTemplates.styles.corporate", "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π"),
      creative: t("styleTemplates.styles.creative", "–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–π"),
      cinematic: t("styleTemplates.styles.cinematic", "–ö–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π"),
    };
    return styleMap[style] || style;
  }, [t]);

  const handleClick = useCallback(() => {
    if (!isAdded) {
      addStyleTemplate(template);
    }
    onSelect(template.id);
  }, [isAdded, addStyleTemplate, template, onSelect]);

  const handleAddToResources = useCallback((e: React.MouseEvent) => {
    e.stopPropagation();
    addStyleTemplate(template);
  }, [addStyleTemplate, template]);

  return (
    <div
      className="group relative cursor-pointer overflow-hidden rounded-lg border border-gray-700 bg-gray-800 transition-all duration-200 hover:border-blue-500 hover:shadow-lg"
      style={{ width: size, height: height + 80 }} // +80 –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤–Ω–∏–∑—É
      onMouseEnter={() => setIsHovered(true)}
      onMouseLeave={() => setIsHovered(false)}
      onClick={handleClick}
    >
      {/* –ü—Ä–µ–≤—å—é */}
      <div
        className="relative overflow-hidden bg-gray-900"
        style={{ width: size, height }}
      >
        {template.thumbnail ? (
          // eslint-disable-next-line @next/next/no-img-element
          <img
            src={template.thumbnail}
            alt={template.name[currentLanguage]}
            className="h-full w-full object-cover transition-transform duration-200 group-hover:scale-105"
          />
        ) : (
          // –ó–∞–≥–ª—É—à–∫–∞ –µ—Å–ª–∏ –Ω–µ—Ç –ø—Ä–µ–≤—å—é
          <div className="flex h-full w-full items-center justify-center bg-gradient-to-br from-gray-700 to-gray-900">
            <div className="text-center text-gray-400">
              <div className="mb-2 text-2xl">üé®</div>
              <div className="text-xs">{getCategoryName(template.category)}</div>
            </div>
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */}
        {isHovered && template.previewVideo && (
          <div className="absolute inset-0 flex items-center justify-center bg-black bg-opacity-50">
            <div className="rounded-full bg-blue-600 p-3 transition-transform hover:scale-110">
              <Play className="h-6 w-6 text-white" fill="white" />
            </div>
          </div>
        )}

        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –≤ —É–≥–ª–∞—Ö */}
        <div className="absolute top-2 left-2 flex gap-1">
          {template.hasText && (
            <div className="rounded bg-blue-600 p-1" title={t("styleTemplates.hasText", "–°–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç")}>
              <Type className="h-3 w-3 text-white" />
            </div>
          )}
          {template.hasAnimation && (
            <div className="rounded bg-purple-600 p-1" title={t("styleTemplates.hasAnimation", "–°–æ–¥–µ—Ä–∂–∏—Ç –∞–Ω–∏–º–∞—Ü–∏—é")}>
              <Zap className="h-3 w-3 text-white" />
            </div>
          )}
        </div>

        {/* –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å */}
        <div className="absolute bottom-2 right-2 flex items-center gap-1 rounded bg-black bg-opacity-70 px-2 py-1 text-xs text-white">
          <Clock className="h-3 w-3" />
          <span>{template.duration}s</span>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ */}
        <FavoriteButton
          file={{ id: template.id, path: "", name: template.name[currentLanguage] }}
          size={size}
          type="template"
        />

        {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Ä–µ—Å—É—Ä—Å—ã */}
        <div className="absolute top-2 right-2">
          {isAdded ? (
            <div className="rounded bg-green-600 p-1" title={t("styleTemplates.addedToResources", "–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ä–µ—Å—É—Ä—Å—ã")}>
              <Check className="h-3 w-3 text-white" />
            </div>
          ) : (
            <button
              onClick={handleAddToResources}
              className="rounded bg-blue-600 p-1 transition-colors hover:bg-blue-700"
              title={t("styleTemplates.addToResources", "–î–æ–±–∞–≤–∏—Ç—å –≤ —Ä–µ—Å—É—Ä—Å—ã")}
            >
              <Plus className="h-3 w-3 text-white" />
            </button>
          )}
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —à–∞–±–ª–æ–Ω–µ */}
      <div className="p-3">
        <div className="mb-1 truncate text-sm font-medium text-white">
          {template.name[currentLanguage]}
        </div>
        <div className="flex items-center justify-between text-xs text-gray-400">
          <span>{getCategoryName(template.category)}</span>
          <span>{getStyleName(template.style)}</span>
        </div>
      </div>
    </div>
  );
}
