name: Quick Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  quick-validation:
    name: Quick Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ffmpeg \
            libavcodec-dev \
            libavformat-dev \
            libavutil-dev \
            libavfilter-dev \
            libavdevice-dev \
            libswscale-dev \
            libswresample-dev \
            pkg-config \
            libglib2.0-dev \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev
            
      - name: Set Linux FFmpeg environment variables
        run: |
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib/pkgconfig:/usr/share/pkgconfig" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_SYSTEM_LIBS=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1" >> $GITHUB_ENV
          
      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ubuntu-cargo-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Install frontend dependencies
        run: bun install
        
      - name: Frontend lint check
        run: bun run lint
        
      - name: Backend format check
        working-directory: src-tauri
        run: cargo fmt -- --check
        
      - name: Create dist directory for tauri context
        run: mkdir -p dist
        
      - name: Backend clippy check
        working-directory: src-tauri
        run: cargo clippy --lib -- -D warnings
        
      - name: Quick backend test (core modules only)
        working-directory: src-tauri
        run: |
          # Run only critical backend tests to catch major issues quickly
          cargo test --lib language_tauri::tests -- --test-threads=1
          cargo test --lib command_registry::tests -- --test-threads=1
          cargo test --lib core::di::tests -- --test-threads=1