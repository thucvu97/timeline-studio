name: Test Coverage

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  frontend-coverage:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          
      - name: Install dependencies
        run: bun install
        
      - name: Run frontend tests with coverage
        run: bun run test:coverage
        
      - name: Upload frontend coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: frontend
          name: frontend-coverage
          fail_ci_if_error: false
          
  backend-coverage:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libglib2.0-dev \
            libcairo2-dev \
            libpango1.0-dev \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.1-dev \
            ffmpeg \
            libavcodec-dev \
            libavformat-dev \
            libavutil-dev \
            libavfilter-dev \
            libavdevice-dev \
            libswscale-dev \
            libswresample-dev \
            pkg-config
            
      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov
        
      - name: Setup FFmpeg
        uses: FedericoCarboni/setup-ffmpeg@v3
        
      - name: Run backend tests with coverage
        run: |
          cd src-tauri
          cargo llvm-cov --lcov --output-path coverage.info
          
      - name: Upload backend coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./src-tauri/coverage.info
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false