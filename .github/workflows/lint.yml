name: Lint

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_call:

jobs:
  lint-js:
    name: Lint JavaScript/TypeScript
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run ESLint
        run: bun run lint
        continue-on-error: ${{ matrix.os == 'windows-latest' }}

      - name: Check TypeScript
        run: bun run type-check
        if: ${{ matrix.os != 'windows-latest' }}

  lint-rust:
    name: Lint Rust
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            ffmpeg \
            libavcodec-dev \
            libavformat-dev \
            libavutil-dev \
            libavfilter-dev \
            libavdevice-dev \
            libswscale-dev \
            libswresample-dev \
            libglib2.0-dev \
            libcairo2-dev \
            libpango1.0-dev \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.1-dev \
            pkg-config \
            build-essential

      - name: Install ONNX Runtime
        run: |
          wget https://github.com/microsoft/onnxruntime/releases/download/v1.22.0/onnxruntime-linux-x64-1.22.0.tgz
          tar -xzf onnxruntime-linux-x64-1.22.0.tgz
          sudo cp onnxruntime-linux-x64-1.22.0/lib/*.so* /usr/local/lib/
          sudo ldconfig
          echo "ORT_DYLIB_PATH=/usr/local/lib/libonnxruntime.so" >> $GITHUB_ENV

      - name: Check formatting
        run: |
          cd src-tauri
          cargo fmt -- --check

      - name: Run Clippy
        run: |
          cd src-tauri
          cargo clippy -- -D warnings

  lint-css:
    name: Lint CSS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run Stylelint
        run: bun run lint:css