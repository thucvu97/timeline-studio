# Runs all checks: JS/TS linting and Rust linting

name: Check All

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  check-js:
    name: Check JavaScript/TypeScript
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Disable git core.autocrlf on Windows
        if: matrix.os == 'windows-latest'
        run: git config --global core.autocrlf false

      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'
          cache: "npm"

      - name: Install dependencies from lockfile
        run: npm ci

      - name: Run lint step on Unix
        if: runner.os != 'Windows'
        run: npm run lint

      - name: Run lint step on Windows
        if: runner.os == 'Windows'
        run: npm run lint:windows

      - name: Check import order on Unix
        if: runner.os != 'Windows'
        run: npm run format:imports

      - name: Check import order on Windows
        if: runner.os == 'Windows'
        run: npm run format:imports:windows

  check-rust:
    name: Check Rust
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Disable git core.autocrlf on Windows
        if: matrix.os == 'windows-latest'
        run: git config --global core.autocrlf false

      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt install libwebkit2gtk-4.1-dev build-essential curl wget file libxdo-dev libssl-dev libayatana-appindicator3-dev librsvg2-dev ffmpeg libavcodec-dev libavformat-dev libavutil-dev libavfilter-dev libavdevice-dev libswscale-dev libswresample-dev pkg-config

      - name: Create empty 'dist' directory
        run: mkdir dist

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: "npm"

      - name: Install dependencies from lockfile
        run: npm ci

      - name: Run rustfmt check
        run: npm run format:rust:check

      - name: Run clippy check and deny warnings
        run: npm run lint:rust

  check-tests:
    name: Run Tests
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Disable git core.autocrlf on Windows
        if: matrix.os == 'windows-latest'
        run: git config --global core.autocrlf false

      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: "npm"

      - name: Install dependencies
        run: |
          rm -rf node_modules
          npm install

      - name: Run tests
        run: npm test
