name: Check All

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint
    uses: ./.github/workflows/lint.yml
    secrets: inherit

  test-coverage:
    name: Test and Coverage
    uses: ./.github/workflows/test-and-coverage.yml
    secrets: inherit

  build:
    name: Build Check
    needs: [lint]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            ffmpeg \
            libavcodec-dev \
            libavformat-dev \
            libavutil-dev \
            libavfilter-dev \
            libavdevice-dev \
            libswscale-dev \
            libswresample-dev \
            libglib2.0-dev \
            libcairo2-dev \
            libpango1.0-dev \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.1-dev \
            pkg-config \
            build-essential

      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install ffmpeg pkg-config

      - name: Install system dependencies (Windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          # Install pkg-config first
          choco install pkgconfiglite -y
          
          # Install vcpkg for FFmpeg
          git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg
          C:\vcpkg\bootstrap-vcpkg.bat
          C:\vcpkg\vcpkg integrate install
          C:\vcpkg\vcpkg install ffmpeg:x64-windows
          
          # Set environment variables for GitHub Actions
          echo "VCPKG_ROOT=C:\vcpkg" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "PKG_CONFIG_PATH=C:\vcpkg\installed\x64-windows\lib\pkgconfig" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "C:\vcpkg\installed\x64-windows\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          
          # Also set for current session
          $env:VCPKG_ROOT = "C:\vcpkg"
          $env:PKG_CONFIG_PATH = "C:\vcpkg\installed\x64-windows\lib\pkgconfig"
          $env:PATH = "C:\vcpkg\installed\x64-windows\bin;$env:PATH"

      - name: Install dependencies
        run: bun install

      - name: Build frontend
        run: bun run build

      - name: Build Tauri app
        run: |
          cd src-tauri
          cargo build --release --no-default-features

  all-checks-passed:
    name: All Checks Passed
    needs: [lint, test-coverage, build]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check results
        run: |
          if [ "${{ needs.lint.result }}" != "success" ] || 
             [ "${{ needs.test-coverage.result }}" != "success" ] || 
             [ "${{ needs.build.result }}" != "success" ]; then
            echo "One or more checks failed"
            exit 1
          fi
          echo "All checks passed!"