name: Build

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          # Install essential build tools and C/C++ headers first
          sudo apt-get install -y build-essential gcc g++ make cmake
          # Install Clang and LLVM for bindgen
          sudo apt-get install -y clang libclang-dev llvm-dev
          # Try to install specific clang version if available
          sudo apt-get install -y libclang-14-dev || sudo apt-get install -y libclang-13-dev || sudo apt-get install -y libclang-12-dev || true
          # Install standard library headers
          sudo apt-get install -y libc6-dev linux-libc-dev
          # Install FFmpeg and development libraries
          sudo apt-get install -y ffmpeg libavcodec-dev libavformat-dev libavutil-dev libavfilter-dev libavdevice-dev libswscale-dev libswresample-dev pkg-config
          
          # Find and set up libclang for bindgen
          echo "=== Finding libclang ==="
          # Find libclang.so
          LIBCLANG_PATH=$(find /usr -name "libclang.so*" -type f 2>/dev/null | grep -E "libclang.so|libclang-[0-9]+.so" | head -1)
          if [ -n "$LIBCLANG_PATH" ]; then
            LIBCLANG_DIR=$(dirname "$LIBCLANG_PATH")
            echo "Found libclang at: $LIBCLANG_PATH"
            echo "Setting LIBCLANG_PATH=$LIBCLANG_DIR"
            echo "LIBCLANG_PATH=$LIBCLANG_DIR" >> $GITHUB_ENV
          else
            echo "WARNING: libclang.so not found, trying default paths"
            # Try common paths
            for path in /usr/lib/llvm-*/lib /usr/lib/x86_64-linux-gnu /usr/lib64 /usr/lib; do
              if [ -d "$path" ] && ls "$path"/libclang*.so* 2>/dev/null | grep -q .; then
                echo "Found libclang in: $path"
                echo "LIBCLANG_PATH=$path" >> $GITHUB_ENV
                break
              fi
            done
          fi
          
          # Set up bindgen clang args
          echo "BINDGEN_EXTRA_CLANG_ARGS=-I/usr/include -I/usr/include/x86_64-linux-gnu" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Clean install dependencies
        run: npm ci --cache clean --force

      - name: Build Next.js app
        run: npm run build

      - name: Run tests
        run: npm run test
