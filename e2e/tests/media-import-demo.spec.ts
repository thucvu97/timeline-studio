import { expect, test } from "../fixtures/test-base"

/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–º–ø–æ—Ä—Ç–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
 * –≠—Ç–æ—Ç —Ç–µ—Å—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–º–ø–æ—Ä—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
 */
test.describe("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–º–ø–æ—Ä—Ç–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤", () => {
  test("–ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –∏–º–ø–æ—Ä—Ç–∞ —Ñ–∞–π–ª–æ–≤ –∏–∑ test-data", async ({ page }) => {
    // 1. –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    await page.waitForLoadState("networkidle")
    console.log("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ")

    // 2. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É Media
    const mediaTab = page.locator('[role="tab"]:has-text("Media")').first()
    await mediaTab.click()
    await page.waitForTimeout(500)
    console.log("‚úÖ –û—Ç–∫—Ä—ã—Ç–∞ –≤–∫–ª–∞–¥–∫–∞ Media")

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    const hasEmptyState =
      (await page.locator("text=/no files|no media|empty|–ø—É—Å—Ç–æ/i").count()) > 0 ||
      (await page.locator('[class*="empty"], [class*="placeholder"]').count()) > 0

    console.log("‚úÖ –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ")

    // 4. –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await page.screenshot({
      path: "test-results/demo-1-initial-state.png",
      fullPage: true,
    })
    console.log("üì∏ –°–æ—Ö—Ä–∞–Ω–µ–Ω —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è")

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ –∏–º–ø–æ—Ä—Ç–∞
    const hasImportButtons =
      (await page
        .locator("button")
        .filter({ hasText: /import|add|upload/i })
        .count()) > 0 || (await page.locator('[class*="import"], [class*="add"]').count()) > 0

    console.log("\n‚úÖ –ö–Ω–æ–ø–∫–∏ –∏–º–ø–æ—Ä—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω—ã")

    // 6. –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏
    const importButton = page
      .locator("button")
      .filter({ hasText: /import|add/i })
      .first()
    if (await importButton.isVisible()) {
      await importButton.hover()
      await page.screenshot({
        path: "test-results/demo-2-import-buttons.png",
        fullPage: true,
      })
      console.log("üì∏ –°–æ—Ö—Ä–∞–Ω–µ–Ω —Å–∫—Ä–∏–Ω—à–æ—Ç –∫–Ω–æ–ø–æ–∫ –∏–º–ø–æ—Ä—Ç–∞")
    }

    // 7. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    console.log("\nüîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∂–∏–º–æ–≤ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è...")

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤
    const hasViewModes =
      (await page
        .locator("button")
        .filter({ hasText: /list|grid|thumbnail/i })
        .count()) > 0

    if (hasViewModes) {
      console.log("‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã —Ä–µ–∂–∏–º—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")
    }

    // 8. –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    console.log("\nüìä –ò—Ç–æ–≥–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:")
    console.log("- –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è")
    console.log("- –í–∫–ª–∞–¥–∫–∞ Media —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    console.log("- –ö–Ω–æ–ø–∫–∏ –∏–º–ø–æ—Ä—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω—ã")
    console.log("- UI –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    console.log("\nüí° –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ —Ñ–∞–π–ª–æ–≤ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 'bun run tauri dev'")

    // –¢–µ—Å—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç
    expect(hasEmptyState || hasImportButtons).toBeTruthy()
  })

  test("–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö", async ({ page }) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å
    await page.waitForLoadState("networkidle")

    console.log("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    console.log("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏")

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ UI
    const hasBasicUI = (await page.locator("button").count()) > 0 && (await page.locator('[role="tab"]').count()) > 0

    console.log("\n–û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã UI:")
    console.log(`- –ö–Ω–æ–ø–∫–∏: ${await page.locator("button").count()}`)
    console.log(`- –í–∫–ª–∞–¥–∫–∏: ${await page.locator('[role="tab"]').count()}`)

    // –¢–µ—Å—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç
    expect(hasBasicUI).toBeTruthy()
  })
})
