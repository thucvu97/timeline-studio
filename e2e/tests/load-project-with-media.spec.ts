import { test, expect } from "../fixtures/test-base"

test.describe("–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏", () => {
  test("—Å–æ–∑–¥–∞–µ–º –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç", async ({ page }) => {
    await page.waitForLoadState("networkidle");
    console.log("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ");
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º
    const hasProjectButtons = 
      await page.locator('button').filter({ hasText: /open|load|–æ—Ç–∫—Ä—ã—Ç—å/i }).count() > 0 ||
      await page.locator('[class*="open"], [class*="load"]').count() > 0;
    
    if (hasProjectButtons) {
      console.log("‚úÖ –ù–∞–π–¥–µ–Ω—ã –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º");
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ–Ω—é File
      const fileMenu = page.locator('button').filter({ hasText: /file|—Ñ–∞–π–ª/i }).first();
      if (await fileMenu.isVisible()) {
        await fileMenu.click();
        await page.waitForTimeout(200);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
        const hasMenuItems = 
          await page.locator('[role="menuitem"], [class*="menu"]').count() > 0;
        
        if (hasMenuItems) {
          console.log("‚úÖ –ú–µ–Ω—é File –¥–æ—Å—Ç—É–ø–Ω–æ");
          // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
          await page.keyboard.press('Escape');
        }
      }
    }
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É Media
    const mediaTab = page.locator('[role="tab"]:has-text("Media")').first();
    await mediaTab.click();
    await page.waitForTimeout(500);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ–¥–∏–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const hasMediaItems = 
      await page.locator('[class*="media"][class*="item"], img, video').count() > 0;
    
    console.log(`üìä –ú–µ–¥–∏–∞ —ç–ª–µ–º–µ–Ω—Ç—ã: ${hasMediaItems ? '–Ω–∞–π–¥–µ–Ω—ã' : '–Ω–µ –Ω–∞–π–¥–µ–Ω—ã'}`);
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
    await page.screenshot({ 
      path: 'test-results/project-loaded-state.png',
      fullPage: true 
    });
    
    // –¢–µ—Å—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç
    expect(true).toBeTruthy();
  });

  test("–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Tauri –∫–æ–º–∞–Ω–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞", async ({ page }) => {
    await page.waitForLoadState("networkidle");
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Tauri API
    const tauriInfo = await page.evaluate(() => {
      const tauri = (window as any).__TAURI__;
      return {
        available: !!tauri,
        hasCore: !!tauri?.core,
        hasInvoke: !!tauri?.core?.invoke
      };
    });
    
    console.log("Tauri info:", tauriInfo);
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º Ctrl+O –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–æ–µ–∫—Ç–∞
    await page.keyboard.press('Control+o');
    await page.waitForTimeout(500);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—è–≤–ª–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
    const hasDialog = 
      await page.locator('[role="dialog"], [class*="dialog"]').count() > 0;
    
    if (hasDialog) {
      console.log("‚úÖ –î–∏–∞–ª–æ–≥ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ—è–≤–∏–ª—Å—è");
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
      await page.keyboard.press('Escape');
    }
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É Music
    const musicTab = page.locator('[role="tab"]:has-text("Music")').first();
    if (await musicTab.isVisible()) {
      await musicTab.click();
      await page.waitForTimeout(500);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞—É–¥–∏–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
      const hasAudioContent = 
        await page.locator('[class*="music"], [class*="audio"]').count() > 0 ||
        await page.locator('text=/mp3|wav|audio/i').count() > 0;
      
      console.log(`${hasAudioContent ? '‚úÖ' : '‚ùå'} –ê—É–¥–∏–æ –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –≤–∫–ª–∞–¥–∫–µ Music`);
    }
    
    // –¢–µ—Å—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç
    expect(true).toBeTruthy();
  });

  test("–ø—Ä—è–º–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–µ—Ä–µ–∑ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã", async ({ page }) => {
    await page.waitForLoadState("networkidle");
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    const appStructure = await page.evaluate(() => {
      const root = document.getElementById('__next') || document.querySelector('#root') || document.querySelector('body > div');
      return {
        hasRoot: !!root,
        hasReactRoot: !!(root && Object.keys(root).some(key => key.includes('react'))),
        childElements: root ? root.children.length : 0
      };
    });
    
    console.log("App structure:", appStructure);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    const hasMainComponents = 
      await page.locator('[class*="timeline"], [class*="browser"], [class*="player"]').count() > 0;
    
    console.log(`–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: ${hasMainComponents ? '–Ω–∞–π–¥–µ–Ω—ã' : '–Ω–µ –Ω–∞–π–¥–µ–Ω—ã'}`);
    
    // –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç
    await page.screenshot({ 
      path: 'test-results/providers-investigation.png',
      fullPage: true 
    });
    
    // –¢–µ—Å—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç –µ—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—å —á—Ç–æ-—Ç–æ
    expect(appStructure.hasRoot || hasMainComponents).toBeTruthy();
  });
})