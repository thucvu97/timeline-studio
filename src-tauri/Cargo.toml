[package]
name = "timeline-studio"
version = "0.18.0"
description = "A Timeline Studio"
authors = ["Alexander Kireyev <ak.chatman.media@gmail.com>"]
license = "MIT WITH Commons-Clause"
repository = "https://github.com/chatman-media/timeline-studio"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
# The `_lib` suffix may seem redundant but it is necessary
# to make the lib name unique and wouldn't conflict with the bin name.
# This seems to be only an issue on Windows, see https://github.com/rust-lang/cargo/issues/8519
name = "timeline_studio_lib"
crate-type = ["staticlib", "cdylib", "rlib"]

[build-dependencies]
tauri-build = { version = "2.0.0-rc.13", features = [] }

[dev-dependencies]
# For test cleanup and initialization
ctor = "0.2"
env_logger = "0.11"
libc = "0.2"
# Test utilities
tempfile = "3.8"
tower = { version = "0.4", features = ["util"] }
urlencoding = "2.1"
reqwest = { version = "0.11", features = ["json"] }

[dependencies]
serde_json = "1"
serde = { version = "1", features = ["derive"] }
tauri = { version = "2.5", features = [ "protocol-asset", "devtools"] }
tauri-plugin-opener = "2.2.7"
sys-locale = "0.3.1"
tauri-plugin-websocket = "2"
tauri-plugin-dialog = "2"
tauri-plugin-fs = "2"
tauri-plugin-notification = "2"
tauri-plugin-log = "2"
tauri-plugin-store = "2"
# Video Compiler dependencies
ffmpeg-next = "7.0"
uuid = { version = "1.0", features = ["serde", "v4"] }
tokio = { version = "1.0", features = ["full"] }
futures = "0.3"
dashmap = "5.0"
image = "0.24"
chrono = { version = "0.4", features = ["serde"] }
log = "0.4"
regex = "1.0"
# Safer mutex implementation that avoids destructor issues
parking_lot = "0.12"
async-trait = "0.1"
base64 = "0.22.1"
# Video Server dependencies
axum = { version = "0.7", features = ["tokio", "http2"] }
tokio-util = { version = "0.7", features = ["io"] }
tower = { version = "0.4", features = ["util"] }
tower-http = { version = "0.5", features = ["cors", "fs"] }
md5 = "0.7"
dirs = "5.0"
anyhow = "1.0.98"
ort = { version = "=2.0.0-rc.10", default-features = false, features = ["std", "load-dynamic"] }
ndarray = "0.15"

[features]
# by default Tauri runs in production mode
# when `tauri dev` runs it is executed with `cargo run --no-default-features` if `devPath` is an URL
default = [ "custom-protocol" ]
# this feature is used used for production builds where `devPath` points to the filesystem
# DO NOT remove this
custom-protocol = [ "tauri/custom-protocol" ]

[target.'cfg(not(any(target_os = "android", target_os = "ios")))'.dependencies]
tauri-plugin-global-shortcut = "2"

# Merged with the earlier dev-dependencies section

[package.metadata.bundle]
name = "Timeline Studio"
identifier = "com.chatman-media.timeline-studio"

[package.metadata.tauri]
# Info.plist customizations for macOS
macos_info_plist_additions = """
<key>NSCameraUsageDescription</key>
<string>Timeline Studio needs access to your camera to record video</string>
<key>NSMicrophoneUsageDescription</key>
<string>Timeline Studio needs access to your microphone to record audio</string>
<key>NSPhotoLibraryUsageDescription</key>
<string>Timeline Studio needs access to your photo library to import media</string>
<key>NSPhotoLibraryAddUsageDescription</key>
<string>Timeline Studio needs permission to save videos to your photo library</string>
"""

[workspace]
resolver = "2"
